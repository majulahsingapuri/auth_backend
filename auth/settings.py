"""
Django settings for auth project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

from django.utils.timezone import timedelta

from .config import Config, config

config: Config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config.debug

ALLOWED_HOSTS = config.allowed_hosts

SITE_ID = 1


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "ninja_extra",
    "ninja_jwt",
    "ninja_jwt.token_blacklist",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "auth.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "auth.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config.database_name,
        "USER": config.database_user,
        "PASSWORD": config.database_password,
        "HOST": config.database_host,
        "PORT": config.database_port,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

ACCOUNT_DEFAULT_HTTP_PROTOCOL = config.account_default_http_protocol
ACCOUNT_EMAIL_VERIFICATION = config.account_email_verification

# Email Configuration for Error Logging.
EMAIL_HOST = config.email_host
EMAIL_PORT = config.email_port
EMAIL_HOST_USER = config.email_host_user
EMAIL_HOST_PASSWORD = config.email_host_password
EMAIL_USE_TLS = True

ADMINS = config.admins

CSRF_COOKIE_DOMAIN = config.csrf_cookie_domain
CSRF_COOKIE_SECURE = config.csrf_cookie_secure
CSRF_TRUSTED_ORIGINS = config.csrf_trusted_origins
SESSION_COOKIE_DOMAIN = config.session_cookie_domain
SESSION_COOKIE_SECURE = config.session_cookie_secure

# ninja-JWT
ACCESS_TOKEN_LIFETIME = timedelta(hours=1)
REFRESH_TOKEN_LIFETIME = timedelta(days=1)
ROTATE_REFRESH_TOKENS = True
BLACKLIST_AFTER_ROTATION = True
UPDATE_LAST_LOGIN = False

ALGORITHM = "RS256"
SIGNING_KEY = config.signing_key
VERIFYING_KEY = config.verifying_key
AUDIENCE = None
ISSUER = config.issuer
JWK_URL = None
LEEWAY = timedelta(seconds=1)

USER_ID_FIELD = "id"
USER_ID_CLAIM = "user_id"
USER_AUTHENTICATION_RULE = "ninja_jwt.authentication.default_user_authentication_rule"

AUTH_TOKEN_CLASSES = ("ninja_jwt.tokens.AccessToken",)
TOKEN_TYPE_CLAIM = "token_type"
TOKEN_USER_CLASS = "ninja_jwt.models.TokenUser"

JTI_CLAIM = "jti"
